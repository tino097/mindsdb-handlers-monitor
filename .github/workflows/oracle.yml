name: MindsDB with Oracle XE Monitor CI

on:
  push: { branches: ["main"] }
  pull_request: { branches: ["main"] }
  workflow_dispatch: {}

jobs:
  infra:
    runs-on: ubuntu-latest
    services:
      oracle:
        image: gvenzl/oracle-xe:21
        env:
          ORACLE_PASSWORD: OraclePassword123
          ORACLE_CHARACTERSET: AL32UTF8
        ports:
          - 1521:1521
          - 5500:5500
        options: >-
          --health-cmd "bash -lc 'echo > /dev/tcp/127.0.0.1/1521'"
          --health-interval 10s --health-timeout 3s --health-retries 120

    steps:
      - uses: actions/checkout@v4

      - name: Wait for oracle health
        run: |
          set -euo pipefail
          ID="${{ job.services.oracle.id }}"
          for i in $(seq 1 180); do
            status=$(docker inspect -f '{{if .State.Health}}{{.State.Health.Status}}{{else}}none{{end}}' "$ID" || echo "none")
            echo "[$i] oracle health: $status"
            if [ "$status" = "healthy" ]; then
              echo "✅ Oracle healthy"
              break
            fi
            sleep 5
          done
          test "$(docker inspect -f '{{.State.Health.Status}}' "$ID")" = "healthy" || (docker logs "$ID" | tail -n 200; exit 1)

      - name: Install & start MindsDB
        run: |
          python -m pip install --upgrade pip
          pip install "mindsdb[all]"
          python -m mindsdb --api http --verbose &
          echo "MINDSDB_PID=$!" >> $GITHUB_ENV
          for i in $(seq 1 180); do
            echo "[$i] Checking MindsDB..."
            if curl -sf http://127.0.0.1:47334/api/status >/dev/null; then
              echo "✅ MindsDB is ready!"
              exit 0
            fi
            sleep 1
          done
          echo "❌ MindsDB failed to start"; exit 1

      - name: Verify services
        run: |
          docker ps
          curl -sf http://127.0.0.1:47334/api/status | tee mindsdb_status.json || true

      - name: Cleanup
        if: always()
        run: |
          if [ -n "${MINDSDB_PID:-}" ]; then kill ${MINDSDB_PID} || true; fi
